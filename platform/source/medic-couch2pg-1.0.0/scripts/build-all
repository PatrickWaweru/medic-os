#!/bin/bash

set -o pipefail

self="`readlink -f "$0" 2>/dev/null || realpath "$0"`"
base_dir="`dirname "$self"`/.."

source "$base_dir/scripts/include/logger" 2>/dev/null &&
source "$base_dir/scripts/include/builder" 2>/dev/null \
    || fatal 'Unable to load a required library'

fatal()
{
  echo "$0: fatal: $*" >&2
  exit 1
}

build_couch2pg()
{
  local name='medic-couch2pg'

  local prefix="$1"
  local compiler_prefix="$2"
  local medic_core_prefix="$3"

  builder_should_run "$name" \
    || return 0

  prepend_paths "$compiler_prefix" "$medic_core_prefix" \
    || return 1

  (cd "source/$name" &&
    rm -rfv node_modules &&
    \
    NODE_ENV=production \
      "$medic_core_prefix/bin/npm" install 2>&1 &&
    \
    rm -rfv node_modules/sqlite3 &&
    mkdir -p "$prefix" && cp -av * "$prefix") | log "$name"

  builder_check_status "$name" "${PIPESTATUS[0]}"
}

main()
{
  builder_initialize &&
  builder_setup_globals &&
  build_couch2pg "$@"
}

cd "$base_dir" && main "$@"
exit "$?"

