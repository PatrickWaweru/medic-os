#!/bin/sh

source '/boot/include/utility'
source '/boot/include/hypervisor'

install()
{
  local is_update="$1"
  shift 1

  local self="`realpath "$0"`"
  local base="`dirname -- "$self"`"

  source "$base/env" &&
  merge_environment /srv || return 255

  local version="$PACKAGE_VERSION"
  local platform="`cat /etc/platform`"
  local couchdb_settings="$PACKAGE_SETTINGS/couchdb"
  local major_version="`echo "$version" | sed 's/\.[0-9]\+$//;'`"

  (cd "$PACKAGE_ROOT/../" &&
    rm -f default && ln -sf "$platform" default) &&
  \
  (cd "$PACKAGE_ROOT/../../" &&
    rm -f "v$major_version" &&
    ln -sf "v$version" "v$major_version" &&
    rm -f current && ln -sf v"$version" current) &&
  \
  (cd "$PACKAGE_STORAGE/nginx/state" && \
    ln -sf ../logs logs) &&
  \
  chown -R couchdb:staff \
    "$couchdb_settings" "$PACKAGE_STORAGE/couchdb" &&
  \
  chown -R couchdb-lucene:staff \
    "$PACKAGE_STORAGE/couchdb-lucene" &&
  \
  chmod 0750 "$couchdb_settings" \
    "$PACKAGE_STORAGE/couchdb" "$PACKAGE_STORAGE/couchdb-lucene" &&
  \
  chmod 0700 "$couchdb_settings/private" &&
  chmod 0700 "$PACKAGE_SETTINGS/openssh/private" &&
  \
  chown -R gammu:gammu \
    "$PACKAGE_STORAGE/gammu" "$PACKAGE_SETTINGS/gammu" &&
  \
  find "$PACKAGE_STORAGE/gammu" \
    -type d -exec chmod 0750 {} \; &&
  \
  for binary in \
    "$PACKAGE_ROOT/bin/gammu-json" \
    "$PACKAGE_ROOT/bin/gammu-smsd-inject"; do
    \
    chown gammu:gammu-inject "$binary" && chmod 4110 "$binary"
  done &&
  \
  if [ -z "$is_update" ]; then
    info 'Installing default CouchDB databases'
    install_default_couchdb_databases \
      "$PACKAGE_ROOT" "$PACKAGE_STORAGE"
  fi &&
  \
  if [ ! -f "$couchdb_settings/local.ini" ]; then
    cp -a "$couchdb_settings/private/local.ini" "$couchdb_settings/"
  fi &&
  \
  if [ "$is_update" ]; then
    info 'Migrating administrative users' &&
    \
    migrate_admins_configuration \
      "$couchdb_settings/local.ini" \
      "$couchdb_settings/private/upgrade-admins.ini" &&
    \
    add_missing_couchdb_system_account 'system' 'lucene' &&
    add_missing_couchdb_system_account 'system' 'gardener' &&
    add_missing_couchdb_system_account 'system' 'transport'
  fi

  return "$?"
}
add_missing_couchdb_system_account()
{
  local auth_user="$1"
  local user="$2"
  shift 2

  # Already exists? Do nothing.
  if [ -f "$passwd_base/$user" ]; then
    return 0
  fi

  auth_user="`basename -- "$auth_user"`"
  local passwd_base='/srv/storage/concierge/passwd'
  local auth_passwd="`cat "$passwd_base/$auth_user"`"

  if [ ! -f "$passwd_base/$auth_user" ]; then
    return 1
  fi

  # Special-case for backward compatibility
  if [ "$auth_user" = 'system' ]; then
    auth_user='service'
  fi

  local base_url="http://$auth_user:$auth_passwd@localhost:5984"
  local admin_url="$base_url/_config/admins/$user"

  local passwd="`
    dd if=/dev/urandom bs=4096 count=1 2>/dev/null \
      | sha512sum | cut -d' ' -f1
  `"

  if [ "$?" -ne 0 ]; then
    return 2
  fi

  curl -s -XPUT "$admin_url" -d "\"$passwd\"" -o/dev/null \
    || return "$?"

  echo "$passwd" > "$passwd_base/$user" \
    || return 3

  return 0
}

install_default_couchdb_databases()
{
  local package_root="$1"
  local storage_dir="$2"

  local src_dir="$package_root/share/couchdb/garden"
  local dst_dir="$storage_dir/couchdb/data"

  for path in "$src_dir"/*.couch; do

    local dst_path="$dst_dir/`basename -- "$path"`" \
      || return "$?"

    if ! [ -f "$dst_path" ]; then
      cp -a "$path" "$dst_path" && chown couchdb:couchdb "$dst_path" \
        || return "$?"
    fi
  done

  return 0
}

migrate_admins_configuration()
{
  local input_file="$1"
  local output_file="$2"

  touch "$output_file" &&
  chmod 0640 "$output_file" &&
  chown couchdb:staff "$output_file" &&
  \
  if [ -f "$input_file" ]; then
    awk '/^ *\[admins\] *$/ { i=1; } i==1 { print; }' \
      < "$input_file" >> "$output_file"
  fi

  return "$?"
}

install "$@"
exit "$?"

